#+title: System Requirements Specification
#+export_file_name: README
#+options: num:nil toc:nil

The intention of this document is not to over-constrain the
development of Frost; rather, it provides a framework for which a
minimally working autonomous vehicle can emerge. This document does
not take precedence over the [[https://agilemanifesto.org/][Agile Manifesto]], nor should it interfere
with the use of the [[https://www.scrum.org/resources/what-is-scrum][Scrum]] framework.

* Contents
  :PROPERTIES:
  :TOC:      this
  :END:
  -  [[#introduction][Introduction]]
    -  [[#purpose][Purpose]]
    -  [[#scope][Scope]]
  -  [[#system-description][System Description]]
    -  [[#system-context][System Context]]
    -  [[#operational-scenarios][Operational Scenarios]]
    -  [[#major-system-capabilities][Major System Capabilities]]
    -  [[#major-system-constraints][Major System Constraints]]
    -  [[#assumptions][Assumptions]]
  -  [[#system-capabilities-conditions-and-constraints][System Capabilities, Conditions, and Constraints]]
    -  [[#functional-requirements][Functional Requirements]]
    -  [[#interfaces][Interfaces]]
    -  [[#performance-requirements][Performance Requirements]]

* Introduction
** Purpose
   Specify the purpose the SyRS and its intended audience. 
** Scope
   Describe the scope of the system to be produced. Within the
   description, include: • The identity of the system • A brief
   description of the system’s functionality • An explanation of what the
   system will and will not do • A description of the application of the
   system • A description of the relevant benefits, objectives, and goals
   of the system This description should be consistent with similar
   statements in preceding project documents.
* System Description
** System Context
   Provide appropriate diagrams and accompanying narratives to provide
   an overview of the context of the system, defining all significant
   interfaces crossing the system’s boundaries.
** Operational Scenarios
   Provide descriptive operational scenarios for the system. An
   operational scenario is a step-by-step description of how the
   system should operate and interact with its users and its external
   interfaces under a given set of circumstances. Scenarios may also
   be used to describe what the system should not do.
** Major System Capabilities
   Provide diagrams and accompanying narratives to depict major
   capability groupings of the requirements.
** Major System Constraints
   Describe the major system constraints. Constraints limit the scope
   and functionality of the system including, but not limited to,
   regulatory policies, infrastructure limitations, resources, and
   licensing. Constraints are requirements that are imposed on the
   solution by circumstance, force, or compulsion. They limit,
   absolutely, the options available to a designer of a solution by
   imposing immovable boundaries and limits.
   #+include: "./constraints.org"
** Assumptions
   Assumptions are factors that are believed to be true during the
   life cycle of the project that, if changed, may affect the project
   outcomes negatively including, but not limited to, end-user
   characteristics, known technology infrastructure, resource
   availability, and funding availability.
* System Capabilities, Conditions, and Constraints
** Functional Requirements
   #+include: "./functional.org"
** Interfaces
   #+include: "./ui.org"
** Performance Requirements
   #+include: "./performance.org"

