#+options: num:t toc:2
#+latex_header: \usepackage[letterpaper, margin = 0.8in]{geometry}
#+export_exclude_tags: noexport

#+title: FrostAV: System Requirements Specification
#+author: Lewis Collum, Ian Shelly, Justin Marcy
#+date: Updated \today

* Contents                                                         :noexport:
  :PROPERTIES:
  :TOC:      this
  :END:
  -  [[#introduction][Introduction]]
  -  [[#system-requirements][System Requirements]]
  -  [[#system-constraints][System Constraints]]
  -  [[#vehicle-constraints][Vehicle Constraints]]
  -  [[#financial-constraints][Financial Constraints]]

* Introduction
  :PROPERTIES:
  :CUSTOM_ID: introduction
  :TOC:      0
  :END:
** Identification
   This document is the System Requirements Specification (SyRS) for
   FrostAV, an autonomous vehicle project, under the supervision of
   Clarkson University's Computer Engineering department. 

** Problem Overview
  The system to be specified requires the design and construction of
  an autonomous car that has the ability to navigate within a
  _lane_. The system should satisfy the tasks specified in section
  [[#problem-domain-requirements]]. Furthermore, the car must have
  wireless communication abilities. And, the sensor systems
  implemented on the car must be minimally invasive (see section
  [[#sensor-constraints]]).
  
# * COMMENT System Abstraction
#   :PROPERTIES:
#   :CUSTOM_ID: system-abstraction
#   :TOC:      0
#   :END:
#   Each stage of the project will rest on the following fundamental
#   diagrammatic abstraction. This abstraction satisfies the
#   requirements for a minimally invasive sensor system, and the ability
#   to network wirelessly. These requirements are discussed in section
#   [[#functional-requirements]].

#   Also, note that the design presented in figure
#   [[system-abstraction_diagram]] exists entirely on the body of the car.
  
#   #+name: system-abstraction_diagram
#   #+caption: A Networker provides a path for data or commands from the wirless bus to the wired bus and vice versa. System components on the vehicle communicate to each other via the wired bus. 
#   #+attr_latex: :width \linewidth/2  
#   [[./figure/2019-09-16_AbstractSystem.png]]

#   In reference to figure [[system-abstraction_diagram]], the
#   "car-independent" components include the Networker, Sensor Systems,
#   and the abstract portion of the Bridge Controllers; the
#   "car-dependent" components include any motors, servos, or power
#   systems for car, plus the concrete portions of the Bridge
#   Controllers.

** Intended Standards
   - ISO/IEC 29110: Systems and Software Life Cycle Profiles and Guidelines for Very Small Entities (VSEs)

* System Requirements
  :PROPERTIES:
  :CUSTOM_ID: system-requirements
  :TOC:      0
  :END:
** Problem-Domain Requirements
   :PROPERTIES:
   :CUSTOM_ID: problem-domain-requirements
   :END:
   1. Given a _lane_, the car must travel approximately parallel to it,
      such that the car stays within its _boundaries_ consistently,
      and, if the car is to accidentally leave it, it promptly
      returns.
   2. Given a _corner_, the car must turn, continuing from the carâ€™s
      current _lane_ to the next, such that the car stays within its
      _boundaries_ consistently, and, if the car is to accidentally
      leave it, it promptly returns.
   3. Given an _obstacle_, the car must stop until it is moved
      further from the car, or it is removed from _circuit boundaries_.
   4. Given a _sign_, the car must respond to the event provided by it.
   5. Given a _circuit_, the car must complete a full loop.

   #+caption: An example _circuit_ which the car must navigate through. Provides visuals for the definitions in section [[#environmental-definitions]].
   #+attr_html: :width 300px
   #+attr_latex: :width \linewidth/2
   [[./figure/environment.png]]
   
*** Problem-Domain Definitions
    :PROPERTIES:
    :CUSTOM_ID: environmental-definitions
    :END:

    | Term             | Definition                                                              |
    |------------------+-------------------------------------------------------------------------|
    | Corner           | A sharp change in path direction that connects two lanes                |
    | Lane             | A path that has a _boundary_                                            |
    | Boundary         | The area between two parallel _edges_                                   |
    | Edge             | A line or a curve                                                       |
    | Circuit Boundary | All connected _boundaries_ which define the total area of the _circuit_ |
    | Circuit          | A closed path defined by connected _lanes_ and _corners_                |
    | Obstacle         | Any object that lies within _circuit boundaries_                        |
    | Sign             | A flat image mounted to a post outside of _circuit boundaries_          |

** Control Requirements
   :PROPERTIES:
   :CUSTOM_ID: control-requirements
   :END:
*** Control System:
    The Control System shall:
   1. Interface with vehicle peripherals, such as, motors, servos,
      batteries, etc.
   2. Be the only system coupled to the vehicle. 
   3. Have a subset of Control Modules for each peripheral in need
      of control.

*** Control Modules:
    Each Control Module shall:
   1. Encapsulate a single purpose, such that, one controller controls
      a single peripheral.
   2. Couple to a peripheral electronically, not mechanically.
   3. Be able to communicate with other controllers via a wired bus.
   4. Be able to communicate with non-controllers that depend on it,
      via a wired bus.
   5. Communicate with other controllers and non-controllers via a
      single shared wired bus.
      
** Autonomy Requirements
   The Autonomy System shall:
   1. Not be directly coupled to the Vehicle Interface (section [[#vehicle-interface-requirements]]).
   2. Be able to fit on the vehicle.
   3. Allow the vehicle to navigate, as per section
      [[#problem-domain-requirements]], without user interaction.
   4. Be able to communicate with the Control System (section [[#control-requirements]]).
** Interface Requirements
   :PROPERTIES:
   :CUSTOM_ID: interface-requirements
   :END:
*** Vehicle Interface Requirements
    :PROPERTIES:
    :CUSTOM_ID: vehicle-interface-requirements
    :END:
    The Vehicle Interface shall:
    1. Include a way for the vehicle to be turned on and off, such
       that, the vehicle receives no power to the _drive system_ or
       _logic_ when off.
    2. Include a way for the vehicle to have its _logic_ turned on,
       while the _drive system_ is off.
    3. Provide a battery peripheral that powers the _logic_.
    4. Provide a battery peripheral that powers the _drive system_.
    5. The total power consumption of the _logic_ and _drive system_
       cannot exceed the maximum capacity of the battery
       peripheral(s).
    6. Provide a peripheral that moves the vehicle.
    7. Provide a peripheral that steers the vehicle.
    8. Provide an electronic interface from each peripheral.

    | Term         | Definition                                                    |
    |--------------+---------------------------------------------------------------|
    | Logic        | Eletronic Systems including the Control and Autonomy Systems  |
    | Drive System | The electromechanical parts on the car, such as, the motor(s) |
    
*** Wireless Interface Requirements
    :PROPERTIES:
    :CUSTOM_ID: wireless-interface-requirements
    :END:
    The Wireless Interface shall:
    1. Allow for wireless tunneling (e.g. via SSH)
    2. Be able to access a server.
    3. Provide bi-directional communication.
    
* System Constraints
  :PROPERTIES:
  :CUSTOM_ID: system-constraints
  :TOC:      0
  :END:
** Sensor Constraints
   :PROPERTIES:
   :CUSTOM_ID: sensor-constraints
   :END:
   1. The sensors to go on the vehicle must be minimally invasive such
      that any sensor attached to the chassis is not coupled to an
      existing mechanism on the chassis. For example, an encoder
      cannot be used since it is coupled to the vehicle drive
      system. Sensors such as accelerometers and cameras can be used
      since they can be attached to the chassis, but are independent
      of existing vehicle mechanisms.

** Financial Constraints
   :PROPERTIES:
   :CUSTOM_ID: financial-constraints
   :TOC:      0
   :END:
   1. The FrostAV team shall not exceed $300 towards parts under the
      superivision of Clarkson University's Department of Computer
      Engineering.
